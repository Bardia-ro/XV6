
Merging program properties

Removed property 0xc0000002 to merge wc.o (0x3) and usys.o (not found)
Removed property 0xc0000002 to merge wc.o (not found) and printf.o (0x3)
Removed property 0xc0000002 to merge wc.o (not found) and umalloc.o (0x3)

Allocating common symbols
Common symbol       size              file

buf                 0x200             wc.o

Discarded input sections

 .note.GNU-stack
                0x0000000000000000        0x0 wc.o
 .note.gnu.property
                0x0000000000000000       0x1c wc.o
 .note.GNU-stack
                0x0000000000000000        0x0 ulib.o
 .note.gnu.property
                0x0000000000000000       0x1c ulib.o
 .note.GNU-stack
                0x0000000000000000        0x0 printf.o
 .note.gnu.property
                0x0000000000000000       0x1c printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 umalloc.o
 .note.gnu.property
                0x0000000000000000       0x1c umalloc.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .text set to 0x1000
LOAD wc.o
LOAD ulib.o
LOAD usys.o
LOAD printf.o
LOAD umalloc.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048074                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rel.text       0x0000000008048074        0x0
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048074        0x0 wc.o

.rel.fini
 *(.rel.fini)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rel.data.rel.ro
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rel.tdata
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)

.rel.tbss
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)

.rel.ctors
 *(.rel.ctors)

.rel.dtors
 *(.rel.dtors)

.rel.got        0x0000000008048074        0x0
 *(.rel.got)
 .rel.got       0x0000000008048074        0x0 wc.o

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rel.ifunc
 *(.rel.ifunc)

.rel.plt        0x0000000008048074        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048074        0x0 wc.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048074        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048074        0x0 wc.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x0000000000001000      0x8c6
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 .text.startup  0x0000000000001000       0x92 wc.o
                0x0000000000001000                main
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 *fill*         0x0000000000001092        0xe 
 .text          0x00000000000010a0       0xe1 wc.o
                0x00000000000010a0                wc
 *fill*         0x0000000000001181        0xf 
 .text          0x0000000000001190      0x25b ulib.o
                0x0000000000001190                strcpy
                0x00000000000011c0                strcmp
                0x0000000000001210                strlen
                0x0000000000001250                memset
                0x0000000000001270                strchr
                0x00000000000012b0                gets
                0x0000000000001330                stat
                0x0000000000001380                atoi
                0x00000000000013c0                memmove
 .text          0x00000000000013eb       0xc0 usys.o
                0x00000000000013eb                fork
                0x00000000000013f3                exit
                0x00000000000013fb                wait
                0x0000000000001403                pipe
                0x000000000000140b                read
                0x0000000000001413                write
                0x000000000000141b                close
                0x0000000000001423                kill
                0x000000000000142b                exec
                0x0000000000001433                open
                0x000000000000143b                mknod
                0x0000000000001443                unlink
                0x000000000000144b                fstat
                0x0000000000001453                link
                0x000000000000145b                mkdir
                0x0000000000001463                chdir
                0x000000000000146b                dup
                0x0000000000001473                getpid
                0x000000000000147b                sbrk
                0x0000000000001483                sleep
                0x000000000000148b                uptime
                0x0000000000001493                getyear
                0x000000000000149b                mprotect
                0x00000000000014a3                munprotect
 *fill*         0x00000000000014ab        0x5 
 .text          0x00000000000014b0      0x276 printf.o
                0x0000000000001560                printf
 *fill*         0x0000000000001726        0xa 
 .text          0x0000000000001730      0x196 umalloc.o
                0x0000000000001730                free
                0x00000000000017c0                malloc
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000000018c8       0x51
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x00000000000018c8       0x37 wc.o
                                         0x38 (size before relaxing)
 .rodata.str1.1
                0x00000000000018ff        0x7 printf.o
 *fill*         0x0000000000001906        0x2 
 .rodata        0x0000000000001908       0x11 printf.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x000000000000191c      0x2d4
 *(.eh_frame)
 .eh_frame      0x000000000000191c       0x7c wc.o
 .eh_frame      0x0000000000001998      0x17c ulib.o
                                        0x194 (size before relaxing)
 .eh_frame      0x0000000000001b14       0x60 printf.o
                                         0x78 (size before relaxing)
 .eh_frame      0x0000000000001b74       0x7c umalloc.o
                                         0x94 (size before relaxing)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x0000000000001bf0                . = .

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x0000000000001bf0        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000001bf0        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x0000000000001bf0        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x0000000000001bf0        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x0000000000001bf0        0x0
 *(.got)
 .got           0x0000000000001bf0        0x0 wc.o
 *(.igot)

.got.plt        0x0000000000001bf0        0x0
 *(.got.plt)
 .got.plt       0x0000000000001bf0        0x0 wc.o
 *(.igot.plt)
 .igot.plt      0x0000000000001bf0        0x0 wc.o

.data           0x0000000000001bf0        0x0
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000001bf0        0x0 wc.o
 .data          0x0000000000001bf0        0x0 ulib.o
 .data          0x0000000000001bf0        0x0 usys.o
 .data          0x0000000000001bf0        0x0 printf.o
 .data          0x0000000000001bf0        0x0 umalloc.o

.data1
 *(.data1)
                0x0000000000001bf0                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x0000000000001bf0                . = .
                0x0000000000001bf0                __bss_start = .

.bss            0x0000000000001c00      0x220
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000001c00        0x0 wc.o
 .bss           0x0000000000001c00        0x0 ulib.o
 .bss           0x0000000000001c00        0x0 usys.o
 .bss           0x0000000000001c00        0x0 printf.o
 .bss           0x0000000000001c00        0xc umalloc.o
 *(COMMON)
 *fill*         0x0000000000001c0c       0x14 
 COMMON         0x0000000000001c20      0x200 wc.o
                0x0000000000001c20                buf
                0x0000000000001e20                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000001e20                . = ALIGN (0x4)
                0x0000000000001e20                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000001e20                . = ALIGN (0x4)
                0x0000000000001e20                _end = .
                [!provide]                        PROVIDE (end = .)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2b
 *(.comment)
 .comment       0x0000000000000000       0x2b wc.o
                                         0x2c (size before relaxing)
 .comment       0x000000000000002b       0x2c ulib.o
 .comment       0x000000000000002b       0x2c printf.o
 .comment       0x000000000000002b       0x2c umalloc.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xa8
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 wc.o
 .debug_aranges
                0x0000000000000028       0x20 ulib.o
 .debug_aranges
                0x0000000000000048       0x20 usys.o
 .debug_aranges
                0x0000000000000068       0x20 printf.o
 .debug_aranges
                0x0000000000000088       0x20 umalloc.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xd4a
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x2ca wc.o
 .debug_info    0x00000000000002ca      0x46a ulib.o
 .debug_info    0x0000000000000734       0x26 usys.o
 .debug_info    0x000000000000075a      0x3b5 printf.o
 .debug_info    0x0000000000000b0f      0x23b umalloc.o

.debug_abbrev   0x0000000000000000      0x66f
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x15f wc.o
 .debug_abbrev  0x000000000000015f      0x186 ulib.o
 .debug_abbrev  0x00000000000002e5       0x14 usys.o
 .debug_abbrev  0x00000000000002f9      0x1c0 printf.o
 .debug_abbrev  0x00000000000004b9      0x1b6 umalloc.o

.debug_line     0x0000000000000000      0x987
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x172 wc.o
 .debug_line    0x0000000000000172      0x2b9 ulib.o
 .debug_line    0x000000000000042b       0x4d usys.o
 .debug_line    0x0000000000000478      0x2e3 printf.o
 .debug_line    0x000000000000075b      0x22c umalloc.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x269
 *(.debug_str)
 .debug_str     0x0000000000000000      0x15c wc.o
                                        0x16e (size before relaxing)
 .debug_str     0x000000000000015c       0x70 ulib.o
                                        0x1b7 (size before relaxing)
 .debug_str     0x00000000000001cc       0x13 usys.o
                                         0x2b (size before relaxing)
 .debug_str     0x00000000000001df       0x2f printf.o
                                        0x166 (size before relaxing)
 .debug_str     0x000000000000020e       0x5b umalloc.o
                                        0x195 (size before relaxing)

.debug_loc      0x0000000000000000      0xcf5
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x23c wc.o
 .debug_loc     0x000000000000023c      0x3aa ulib.o
 .debug_loc     0x00000000000005e6      0x4de printf.o
 .debug_loc     0x0000000000000ac4      0x231 umalloc.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x88
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 wc.o
 .debug_ranges  0x0000000000000018       0x58 printf.o
 .debug_ranges  0x0000000000000070       0x18 umalloc.o

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(_wc elf32-i386)
